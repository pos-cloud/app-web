'use strict'

var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var CodeAFIP = require('./code-afip');

var TransactionTypeSchema = new Schema({
	order: { type: Number, default: 1 },
	branch: { type: Schema.ObjectId, ref: 'branch' },
	transactionMovement: { type: String, trim: true },
	abbreviation: { type: String, trim: true },
	name: { type: String, trim: true },
	labelPrint: { type: String, trim: true },
	currentAccount: { type: String, trim: true },
	movement: { type: String, trim: true },
	modifyStock: { type: Boolean, default: false },
	stockMovement: { type: String, trim: true },
	requestArticles: { type: Boolean, default: false },
	modifyArticle: { type: Boolean, default: false },
	entryAmount: { type: String, trim: true, default: "" },
	requestTaxes: { type: Boolean, default: false },
	defectOrders: { type: Boolean, default: false },
	allowAPP: { type: Boolean, default: false },
	allowTransactionClose: { type: Boolean, default: true },
	allowEdit: { type: Boolean, default: false },
	allowDelete: { type: Boolean, default: false },
	allowZero: { type: Boolean, default: false },
	allowCompanyDiscount: { type: Boolean, default: true },
	electronics: { type: Boolean, default: false },
	codes: { type: CodeAFIP }, // AR
	fiscalCode: { type: String, trim: true },
	fixedOrigin: { type: Number, default: 0 },
	fixedLetter: { type: String, trim: true },
	maxOrderNumber: { type: Number, default: 0 },
	tax: { type: Boolean, default: false },
	cashBoxImpact: { type: Boolean, default: true },
	cashOpening: { type: Boolean, default: false },
	cashClosing: { type: Boolean, default: false },
	requestPaymentMethods: { type: Boolean, default: true },
	requestCurrency: { type: Boolean, default: false },
	requestTransport: { type: Boolean, default: false },
	showPrices: { type: Boolean, default: true },
	automaticNumbering: { type: Boolean, default: true },
	automaticCreation: { type: Boolean, default: false },
	requestEmployee: { type: Schema.ObjectId, ref: "employee-type" },
	requestCompany: { type: String, trim: true },
	fastPayment: { type: Schema.ObjectId, ref: "payment-method" },
	printable: { type: Boolean, default: false },
	defectPrinter: { type: Schema.ObjectId, ref: "printer" },
	defectUseOfCFDI: { type: Schema.ObjectId, ref: 'uses-of-cfdi' }, // MX
	isPreprinted: { type: Boolean, default: false },
	showPriceType: { type: String, trim: true, default: "Precio Final" },
	showDescriptionType: { type: String, trim: true, default: "Descripción" },
	printDescriptionType: { type: String, trim: true, default: "Descripción" },
	printSign: { type: Boolean, default: false },
	posKitchen: { type: Boolean, default: false },
	finishCharge: { type: Boolean, default: true },
	readLayout: { type: Boolean, default: false },
	expirationDate: { type: Date },
	updatePrice: { type: String, default: false },
	updateArticle: { type: Boolean, default: false },
	requestEmailTemplate: { type: Boolean, default: false },
	defectEmailTemplate: { type: Schema.ObjectId, ref: "email-template" },
	requestShipmentMethod: { type: Boolean, default: false },
	defectShipmentMethod: { type: Schema.ObjectId, ref: 'shipment-method' },
	application: { type: Schema.ObjectId, ref: 'application' },
	level: { type: Number, default: 0 },
    optionalAFIP: {
        id: { type: String, trim : true },
        name: { type: String, trim : true },
        value: { type: String, trim : true },
    },
	groupsArticles: { type: Boolean, default: false },
	printOrigin: { type: Boolean, default: false },
	numberPrint: { type: Number, default: 0 },
	orderNumber: { type: Number },
	finishState: { type: String, trim: true},
	creationUser: { type: Schema.ObjectId, ref: "user" },
	creationDate: { type: Date },
	operationType: { type: String, trim: true },
	updateUser: { type: Schema.ObjectId, ref: "user" },
	updateDate: { type: Date }
});

module.exports = TransactionTypeSchema;