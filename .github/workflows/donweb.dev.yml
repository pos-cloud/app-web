# name: Deploy to DonWeb Dev (prod-ar)

# on:
#   push:
#     branches: [ dev ]
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '14'

#       - name: Install dependencies
#         run: npm install --legacy-peer-deps

#       - name: Build Angular app
#         run: npm run build:prod

#       - name: Build Docker image
#         run: docker build -t system2 -f Dockerfile.main2 .

#   deploy:
#     runs-on: prod-ar
#     needs: build

#     steps:
#       - name: Stop and remove existing container
#         run: |
#           docker stop system2 || true
#           docker rm -f system2 || true

#       - name: Copy dist folder from build job
#         run: docker cp "$(docker create system2)":/app/dist /tmp/dist

#       - name: Run Docker container
#         run: docker run -v /tmp/dist:/usr/share/nginx/html --restart unless-stopped --net host --name system2 -d -it -p 304:80 system


name: Build and Deploy

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build Angular
      run: |
        npm install --legacy-peer-deps
        npm run build:prod
        mkdir -p artifacts
        mv dist artifacts/

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: artifacts/

  deploy:
    runs-on: prod
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: artifacts
    - name: Stop and remove existing container
      run: |
          docker stop system-poscloud || true
          docker rm -f system-poscloud || true

    - name: Build Docker Image and Run Container
      run: |
        cd artifacts/dist
        # Comandos para construir la imagen Docker y ejecutar el contenedor
        docker build -t system-poscloud -f Dockerfile.main2 .
        docker run -v /tmp/dist:/usr/share/nginx/html --restart unless-stopped --net host --name system-poscloud -d -it -p 304:80 system
